generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/postgres"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_PG")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique @db.VarChar(255)
  name         String         @db.VarChar(50)
  password     String         @db.VarChar(100)
  userIcon     String
  userProfile  String?        @db.VarChar(300)
  posts        Post[]
  postComments PostComments[]
  postLikes    PostLikes[]
  profileViews UserViews[]
}

model Post {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  title        String         @db.VarChar(40)
  image1       String?
  description1 String?        @map("content") @db.VarChar(300)
  image2       String?
  description2 String?        @db.VarChar(300)
  image3       String?
  description3 String?        @db.VarChar(300)
  image4       String?
  description4 String?        @db.VarChar(300)
  image5       String?
  description5 String?        @db.VarChar(300)
  likeCount    Int            @default(0)
  location     String?        @db.VarChar(100)
  googlePlace  String?        @db.VarChar(300)
  lat          Float?
  lon          Float?
  category     String         @default("culture")
  published    Boolean        @default(false)
  authorId     Int
  author       User           @relation(fields: [authorId], references: [id])
  comments     PostComments[]
  likes        PostLikes[]
  views        PostViews[]
}

model PostLikes {
  id        Int      @id @default(autoincrement())
  postId    Int
  userId    Int
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([postId, userId])
}

model PostComments {
  commentId Int      @id @default(autoincrement())
  comment   String   @db.VarChar(100)
  postId    Int
  userId    Int
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model PostViews {
  id        Int      @id @default(autoincrement())
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  viewedAt  DateTime @default(now())
  ip        String?
  userAgent String?

  @@index([postId, viewedAt])
}

model UserViews {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  viewedAt  DateTime @default(now())
  ip        String?
  userAgent String?

  @@index([userId, viewedAt])
}
